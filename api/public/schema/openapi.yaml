openapi: 3.0.2
info:
  title: 'Verzoek Registratie Component'
  version: V.0.1
  description: |
    API Details
    - Component: Verzoek Registratie Component
    - Reference: vrc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/Proto-component-commonground) / [zip](https://github.com/ConductionNL/Proto-component-commonground/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/pc-php) 
    - Datamodel: [postman](/schema/pc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /archives:
    get:
      tags:
        - Archive
      operationId: getArchiveCollection
      summary: 'Retrieves the collection of Archive resources.'
      responses:
        200:
          description: 'Archive collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ExampleEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Archive-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Archive
      operationId: postArchiveCollection
      summary: 'Creates a Archive resource.'
      responses:
        201:
          description: 'Archive resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Archive-read'
          links:
            GetArchiveItem:
              parameters:
                id: '$response.body#/id'
              operationId: getArchiveItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /archives/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Archive-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Archive-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Archive-write'
        description: 'The new Archive resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/archives/{id}':
    get:
      tags:
        - Archive
      operationId: getArchiveItem
      summary: 'Retrieves a Archive resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Archive resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Archive-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Archive
      operationId: deleteArchiveItem
      summary: 'Removes the Archive resource.'
      responses:
        204:
          description: 'Archive resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Archive
      operationId: putArchiveItem
      summary: 'Replaces the Archive resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Archive resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Archive-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Archive-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Archive-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Archive-write'
        description: 'The updated Archive resource'
    patch:
      tags:
        - Archive
      operationId: patchArchiveItem
      summary: 'Updates the Archive resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Archive resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Archive-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Archive-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Archive-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Archive-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Archive-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Archive-write'
        description: 'The updated Archive resource'
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    patch:
      tags:
        - Organization
      operationId: patchOrganizationItem
      summary: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
  /request_cases:
    get:
      tags:
        - RequestCase
      operationId: getRequestCaseCollection
      summary: 'Retrieves the collection of RequestCase resources.'
      responses:
        200:
          description: 'RequestCase collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - RequestCase
      operationId: postRequestCaseCollection
      summary: 'Creates a RequestCase resource.'
      responses:
        201:
          description: 'RequestCase resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
          links:
            GetRequestCaseItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRequestCaseItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /request_cases/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
        description: 'The new RequestCase resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/request_cases/{id}':
    get:
      tags:
        - RequestCase
      operationId: getRequestCaseItem
      summary: 'Retrieves a RequestCase resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'RequestCase resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - RequestCase
      operationId: deleteRequestCaseItem
      summary: 'Removes the RequestCase resource.'
      responses:
        204:
          description: 'RequestCase resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - RequestCase
      operationId: putRequestCaseItem
      summary: 'Replaces the RequestCase resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'RequestCase resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
        description: 'The updated RequestCase resource'
    patch:
      tags:
        - RequestCase
      operationId: patchRequestCaseItem
      summary: 'Updates the RequestCase resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'RequestCase resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
        description: 'The updated RequestCase resource'
  /requests:
    get:
      tags:
        - Request
      operationId: getRequestCollection
      summary: 'Retrieves the collection of Request resources.'
      responses:
        200:
          description: 'Request collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
      parameters:
        -
          name: submitter
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitter[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: requestType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requestType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: processType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'processType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organizations.rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organizations.rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organizations.status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organizations.status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitters.organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitters.organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitters.person
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitters.person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitters.contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitters.contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'createdAt[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'createdAt[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'createdAt[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'createdAt[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submittedAt[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submittedAt[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submittedAt[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submittedAt[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[submitter]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[reference]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[requestType]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[processType]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[organizations.rsin]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[organizations.status]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[submitters.organization]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[submitters.person]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[submitters.contact]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[archive.nomination]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[archive.status]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[createdAt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[submittedAt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Request
      operationId: postRequestCollection
      summary: 'Creates a Request resource.'
      responses:
        201:
          description: 'Request resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
          links:
            GetRequestItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRequestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /requests/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The new Request resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/requests/{id}':
    get:
      tags:
        - Request
      operationId: getRequestItem
      summary: 'Retrieves a Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Request resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Request
      operationId: deleteRequestItem
      summary: 'Removes the Request resource.'
      responses:
        204:
          description: 'Request resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Request
      operationId: putRequestItem
      summary: 'Replaces the Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Request resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The updated Request resource'
    patch:
      tags:
        - Request
      operationId: patchRequestItem
      summary: 'Updates the Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Request resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The updated Request resource'
  /submitters:
    get:
      tags:
        - Submitter
      operationId: getSubmitterCollection
      summary: 'Retrieves the collection of Submitter resources.'
      responses:
        200:
          description: 'Submitter collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Submitter
      operationId: postSubmitterCollection
      summary: 'Creates a Submitter resource.'
      responses:
        201:
          description: 'Submitter resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
          links:
            GetSubmitterItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSubmitterItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /submitters/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Submitter-write'
        description: 'The new Submitter resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/submitters/{id}':
    get:
      tags:
        - Submitter
      operationId: getSubmitterItem
      summary: 'Retrieves a Submitter resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Submitter resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Submitter
      operationId: deleteSubmitterItem
      summary: 'Removes the Submitter resource.'
      responses:
        204:
          description: 'Submitter resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Submitter
      operationId: putSubmitterItem
      summary: 'Replaces the Submitter resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Submitter resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Submitter-write'
        description: 'The updated Submitter resource'
    patch:
      tags:
        - Submitter
      operationId: patchSubmitterItem
      summary: 'Updates the Submitter resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Submitter resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Submitter-write'
        description: 'The updated Submitter resource'
components:
  schemas:
    Archive-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        nomination:
          description: 'The archive nomination of the resource'
          type: string
        action_date:
          description: 'A "Y-m-d H:i:s" formatted value stating when an archive action should be made on the resource'
          type: string
          format: date-time
        status:
          description: 'Indication whether the resource must be permanently stored or destroyed after a certain period.'
          type: string
    Archive-write:
      type: object
      description: ''
      properties:
        nomination:
          description: 'The archive nomination of the resource'
          type: string
        action_date:
          description: 'A "Y-m-d H:i:s" formatted value stating when an archive action should be made on the resource'
          type: string
          format: date-time
        status:
          description: 'Indication whether the resource must be permanently stored or destroyed after a certain period.'
          type: string
    Organization-read:
      type: object
      description: 'An organization handling a request'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        rsin:
          description: 'The RSIN of a organization that is handling or supposed to handle this request'
          type: string
        status:
          type: string
        request:
          description: 'The request that this organsisation is handling'
          $ref: '#/components/schemas/Request-read'
      required:
        - rsin
        - status
    Organization-write:
      type: object
      description: 'An organization handling a request'
      required:
        - rsin
        - status
      properties:
        rsin:
          description: 'The RSIN of a organization that is handling or supposed to handle this request'
          type: string
        status:
          type: string
        request:
          description: 'The request that this organsisation is handling'
          $ref: '#/components/schemas/Request-write'
    Request-read:
      type: object
      description: 'A request (or verzoek in dutch) to an organization (usually governmental) to do ''something'' on behalf of a citizen or another organization'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
    'ExampleEntity:jsonld-read':
      type: object
      description: 'This is an example entity.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this example property'
          type: string
        description:
          description: 'The description of this example property'
          type: string
        camelCase:
          description: 'Proof that we camel case our api'
          type: string
      required:
        - name
    'ExampleEntity:jsonld-write':
      type: object
      description: 'This is an example entity.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this example property'
          type: string
        description:
          description: 'The description of this example property'
          type: string
        camelCase:
          description: 'Proof that we camel case our api'
          type: string
definitions:
  Archive-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      nomination:
        example: destroy
      actionDate: []
      status:
        example: to_be_archived
    required: []
  Archive-write:
    properties:
      nomination:
        example: destroy
      actionDate: []
      status:
        example: to_be_archived
    required: []
  Organization-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      rsin:
        example: '002851234'
      status:
        example: none
        maxLength: 255
      createdAt: []
      request: []
    required:
      - rsin
      - status
  Organization-write:
    properties:
      rsin:
        example: '002851234'
      status:
        example: none
        maxLength: 255
      request: []
    required:
      - rsin
      - status
  Request-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      reference:
        maxLength: 255
      status:
        example: incomplete
        maxLength: 255
      requestType:
        example: 'http://vtc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      targetOrganization:
        example: '002851234'
      submitter:
        example: '002851234'
      submitterPerson:
        example: 'true'
      properties:
        example: '}'
      processType:
        example: 'http://ptc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      createdAt: []
      submittedAt: []
      confidential:
        example: 'false'
      submitters: []
      organizations: []
      requestCases: []
      parent: []
      children: []
      archive: []
    required:
      - requestType
  Request-write:
    properties:
      status:
        example: incomplete
        maxLength: 255
      requestType:
        example: 'http://vtc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      targetOrganization:
        example: '002851234'
      submitter:
        example: '002851234'
      submitterPerson:
        example: 'true'
      properties:
        example: '}'
      processType:
        example: 'http://ptc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      confidential:
        example: 'false'
      submitters: []
      organizations: []
      requestCases: []
      parent: []
      children: []
      archive: []
    required:
      - requestType
  RequestCase-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      requestCase:
        example: zrc.gemeente.nl/case/e2984465-190a-4562-829e-a8cca81aa35d
        format: url
        maxLength: 255
      createdAt: []
      caseNumber:
        example: '12345'
        maxLength: 255
      request: []
    required: []
  RequestCase-write:
    properties:
      requestCase:
        example: zrc.gemeente.nl/case/e2984465-190a-4562-829e-a8cca81aa35d
        format: url
        maxLength: 255
      caseNumber:
        example: '12345'
        maxLength: 255
      request: []
    required: []
  Submitter-read:
    properties:
      id:
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      assent:
        example: irc.zaakonline.nl/assent/e2984465-190a-4562-829e-a8cca81aa35d
        format: url
        maxLength: 255
      contact:
        example: crc.zaakonline.nl/person/e2984465-190a-4562-829e-a8cca81aa35d
        format: url
        maxLength: 255
      person:
        example: '999993653'
        maxLength: 10
      organization:
        example: '002851234'
        maxLength: 10
      createdAt: []
      role:
        example: initiator
        maxLength: 255
      request: []
    required: []
  Submitter-write:
    properties:
      assent:
        example: irc.zaakonline.nl/assent/e2984465-190a-4562-829e-a8cca81aa35d
        format: url
        maxLength: 255
      contact:
        example: crc.zaakonline.nl/person/e2984465-190a-4562-829e-a8cca81aa35d
        format: url
        maxLength: 255
      person:
        example: '999993653'
        maxLength: 10
      organization:
        example: '002851234'
        maxLength: 10
      role:
        example: initiator
        maxLength: 255
      request: []
    required: []
tags:
  -
    name: Archive
    description: |
      
      
      
  -
    name: Organization
    description: |
      An organization handling a request
      
      
  -
    name: Request
    description: |
      A request (or verzoek in dutch) to an organization (usually governmental) to do 'something' on behalf of a citizen or another organization
      
      
  -
    name: RequestCase
    description: |
      An case atached to a request
      
      
  -
    name: Submitter
    description: |
      The submitters of a request
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Submitter resource'
      write: 'write right to the Submitter resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Submitter resource'
      write: 'write right to the Submitter resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
