openapi: 3.0.2
info:
  title: 'Verzoek Registratie Component'
  version: V.1.1
  description: |
    API Details
    - Component: Verzoek Registratie Component
    - Reference: vrc
    - Enviroment: dev
    - Version: V.1.1
    - Repository: [online]() / [zip](/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/vrc-php) 
    - Datamodel: [postman](/schema/vrc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /requests:
    get:
      tags:
        - Request
      operationId: getRequestCollection
      summary: 'Retrieves the collection of Request resources.'
      responses:
        200:
          description: 'Request collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Request:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
      parameters:
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: request_type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request_type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: process_type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'process_type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'date_created[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_created[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_created[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_created[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_modified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_modified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_modified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date_modified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[reference]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request_type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[process_type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[date_created]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[date_modified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Request
      operationId: postRequestCollection
      summary: 'Creates a Request resource.'
      responses:
        201:
          description: 'Request resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
          links:
            GetRequestItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRequestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /requests/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The new Request resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/requests/{id}':
    get:
      tags:
        - Request
      operationId: getRequestItem
      summary: 'Retrieves a Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Request resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Request
      operationId: deleteRequestItem
      summary: 'Removes the Request resource.'
      responses:
        204:
          description: 'Request resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Request
      operationId: putRequestItem
      summary: 'Replaces the Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Request resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The updated Request resource'
    patch:
      tags:
        - Request
      operationId: patchRequestItem
      summary: 'Updates the Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Request resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The updated Request resource'
components:
  schemas:
    Request-read:
      type: object
      description: 'A request (or verzoek in dutch) to an organization (usually governmental) to do ''something'' on behalf of a citizen or another organization'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'A specific commonground organisation that is being reviewd, e.g a single product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        reference:
          readOnly: true
          description: 'The human readable reference of this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
        status:
          description: 'The curent status of this request. Where *incomplete* is unfinished request, *complete* means that a request has been posted by the submitter, *submitted* means that an organization has started handling the request and *processed* means that any or all cases attached to a request have been handled'
          type: string
        request_type:
          description: 'The type of request against which this request should be validated'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        process_type:
          description: 'The processType that made this request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        submitters:
          description: 'An array instemmingen of the people or organizations that submitted this request'
          type: array
          items:
            type: string
        properties:
          description: 'The actual properties of the request, as described by the request type in the [vtc](http://vrc.zaakonline.nl/).'
          type: array
          items:
            type: string
        cases:
          description: 'An array of cases tied to this request'
          type: array
          items:
            type: string
        parent:
          description: 'The request that this request was based on'
          $ref: '#/components/schemas/Request-read'
        children:
          description: 'The requests that are bassed on this request'
          type: array
          items:
            $ref: '#/components/schemas/Request-read'
        confidential:
          description: 'Whether or not this request is considered confidential'
          type: boolean
        current_stage:
          description: 'The current stage of the client journey in this proces'
          type: string
        date_submitted:
          readOnly: true
          description: 'The moment this request was submitted by the submitter'
          type: string
          format: date-time
        date_created:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        date_modified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - organization
        - request_type
        - submitters
    Request-write:
      type: object
      description: 'A request (or verzoek in dutch) to an organization (usually governmental) to do ''something'' on behalf of a citizen or another organization'
      required:
        - organization
        - request_type
        - submitters
      properties:
        organization:
          description: 'A specific commonground organisation that is being reviewd, e.g a single product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        status:
          description: 'The curent status of this request. Where *incomplete* is unfinished request, *complete* means that a request has been posted by the submitter, *submitted* means that an organization has started handling the request and *processed* means that any or all cases attached to a request have been handled'
          type: string
        request_type:
          description: 'The type of request against which this request should be validated'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        process_type:
          description: 'The processType that made this request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        submitters:
          description: 'An array instemmingen of the people or organizations that submitted this request'
          type: array
          items:
            type: string
        properties:
          description: 'The actual properties of the request, as described by the request type in the [vtc](http://vrc.zaakonline.nl/).'
          type: array
          items:
            type: string
        cases:
          description: 'An array of cases tied to this request'
          type: array
          items:
            type: string
        parent:
          description: 'The request that this request was based on'
          $ref: '#/components/schemas/Request-write'
        children:
          description: 'The requests that are bassed on this request'
          type: array
          items:
            $ref: '#/components/schemas/Request-write'
        confidential:
          description: 'Whether or not this request is considered confidential'
          type: boolean
        current_stage:
          description: 'The current stage of the client journey in this proces'
          type: string
    'Request:jsonld-read':
      type: object
      description: 'A request (or verzoek in dutch) to an organization (usually governmental) to do ''something'' on behalf of a citizen or another organization'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'A specific commonground organisation that is being reviewd, e.g a single product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        reference:
          readOnly: true
          description: 'The human readable reference of this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
        status:
          description: 'The curent status of this request. Where *incomplete* is unfinished request, *complete* means that a request has been posted by the submitter, *submitted* means that an organization has started handling the request and *processed* means that any or all cases attached to a request have been handled'
          type: string
        request_type:
          description: 'The type of request against which this request should be validated'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        process_type:
          description: 'The processType that made this request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        submitters:
          description: 'An array instemmingen of the people or organizations that submitted this request'
          type: array
          items:
            type: string
        properties:
          description: 'The actual properties of the request, as described by the request type in the [vtc](http://vrc.zaakonline.nl/).'
          type: array
          items:
            type: string
        cases:
          description: 'An array of cases tied to this request'
          type: array
          items:
            type: string
        parent:
          description: 'The request that this request was based on'
          $ref: '#/components/schemas/Request:jsonld-read'
        children:
          description: 'The requests that are bassed on this request'
          type: array
          items:
            $ref: '#/components/schemas/Request:jsonld-read'
        confidential:
          description: 'Whether or not this request is considered confidential'
          type: boolean
        current_stage:
          description: 'The current stage of the client journey in this proces'
          type: string
        date_submitted:
          readOnly: true
          description: 'The moment this request was submitted by the submitter'
          type: string
          format: date-time
        date_created:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        date_modified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - organization
        - request_type
        - submitters
    'Request:jsonld-write':
      type: object
      description: 'A request (or verzoek in dutch) to an organization (usually governmental) to do ''something'' on behalf of a citizen or another organization'
      required:
        - organization
        - request_type
        - submitters
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'A specific commonground organisation that is being reviewd, e.g a single product'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        status:
          description: 'The curent status of this request. Where *incomplete* is unfinished request, *complete* means that a request has been posted by the submitter, *submitted* means that an organization has started handling the request and *processed* means that any or all cases attached to a request have been handled'
          type: string
        request_type:
          description: 'The type of request against which this request should be validated'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        process_type:
          description: 'The processType that made this request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        submitters:
          description: 'An array instemmingen of the people or organizations that submitted this request'
          type: array
          items:
            type: string
        properties:
          description: 'The actual properties of the request, as described by the request type in the [vtc](http://vrc.zaakonline.nl/).'
          type: array
          items:
            type: string
        cases:
          description: 'An array of cases tied to this request'
          type: array
          items:
            type: string
        parent:
          description: 'The request that this request was based on'
          $ref: '#/components/schemas/Request:jsonld-write'
        children:
          description: 'The requests that are bassed on this request'
          type: array
          items:
            $ref: '#/components/schemas/Request:jsonld-write'
        confidential:
          description: 'Whether or not this request is considered confidential'
          type: boolean
        current_stage:
          description: 'The current stage of the client journey in this proces'
          type: string
definitions:
  Request-read:
    properties:
      id:
        description: 'The id of this entity'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      organization:
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      reference:
        example: 6666-2019-0000000012
        maxLength: 255
      status:
        example: incomplete
        maxLength: 255
      requestType:
        example: 'http://vtc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      processType:
        example: 'http://ptc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      submitters:
        example: ''
      properties:
        example: '}'
      cases:
        example: ''
      confidential:
        example: 'false'
      currentStage:
        example: getuigen
        maxLength: 255
      dateSubmitted: []
      dateCreated: []
      dateModified: []
      parent: []
      children: []
    required:
      - organization
      - requestType
      - submitters
  Request-write:
    properties:
      organization:
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        format: url
      status:
        example: incomplete
        maxLength: 255
      requestType:
        example: 'http://vtc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      processType:
        example: 'http://ptc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        format: url
        maxLength: 255
      submitters:
        example: ''
      properties:
        example: '}'
      cases:
        example: ''
      confidential:
        example: 'false'
      currentStage:
        example: getuigen
        maxLength: 255
      parent: []
      children: []
    required:
      - organization
      - requestType
      - submitters
tags:
  -
    name: Request
    description: |
      A request (or verzoek in dutch) to an organization (usually governmental) to do 'something' on behalf of a citizen or another organization
      
      
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Request resource'
      write: 'write right to the Request resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Request resource'
      write: 'write right to the Request resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
