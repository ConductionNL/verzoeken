openapi: 3.0.2
info:
  title: 'Verzoek Registratie Component (VRC)'
  version: 0.0.1
  description: |2
                          
    
paths:
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    patch:
      tags:
        - Organization
      operationId: patchOrganizationItem
      summary: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
  /request_cases:
    get:
      tags:
        - RequestCase
      operationId: getRequestCaseCollection
      summary: 'Retrieves the collection of RequestCase resources.'
      responses:
        200:
          description: 'RequestCase collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestCase-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - RequestCase
      operationId: postRequestCaseCollection
      summary: 'Creates a RequestCase resource.'
      responses:
        201:
          description: 'RequestCase resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
          links:
            GetRequestCaseItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRequestCaseItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /request_cases/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
        description: 'The new RequestCase resource'
  '/request_cases/{id}':
    get:
      tags:
        - RequestCase
      operationId: getRequestCaseItem
      summary: 'Retrieves a RequestCase resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RequestCase resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RequestCase
      operationId: deleteRequestCaseItem
      summary: 'Removes the RequestCase resource.'
      responses:
        204:
          description: 'RequestCase resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RequestCase
      operationId: putRequestCaseItem
      summary: 'Replaces the RequestCase resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RequestCase resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
        description: 'The updated RequestCase resource'
    patch:
      tags:
        - RequestCase
      operationId: patchRequestCaseItem
      summary: 'Updates the RequestCase resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RequestCase resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestCase-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestCase-write'
        description: 'The updated RequestCase resource'
  /requests:
    get:
      tags:
        - Request
      operationId: getRequestCollection
      summary: 'Retrieves the collection of Request resources.'
      responses:
        200:
          description: 'Request collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request-read'
      parameters:
        -
          name: submitter
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitter[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: requestType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requestType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: processType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'processType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organizations.rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organizations.rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organizations.status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organizations.status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitters.organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitters.organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitters.person
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitters.person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: submitters.contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'submitters.contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Request
      operationId: postRequestCollection
      summary: 'Creates a Request resource.'
      responses:
        201:
          description: 'Request resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
          links:
            GetRequestItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRequestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /requests/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The new Request resource'
  '/requests/{id}':
    get:
      tags:
        - Request
      operationId: getRequestItem
      summary: 'Retrieves a Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Request resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Request
      operationId: deleteRequestItem
      summary: 'Removes the Request resource.'
      responses:
        204:
          description: 'Request resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Request
      operationId: putRequestItem
      summary: 'Replaces the Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Request resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The updated Request resource'
    patch:
      tags:
        - Request
      operationId: patchRequestItem
      summary: 'Updates the Request resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Request resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Request-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Request-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Request-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Request-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Request-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Request-write'
        description: 'The updated Request resource'
  /submitters:
    get:
      tags:
        - Submitter
      operationId: getSubmitterCollection
      summary: 'Retrieves the collection of Submitter resources.'
      responses:
        200:
          description: 'Submitter collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitter-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Submitter
      operationId: postSubmitterCollection
      summary: 'Creates a Submitter resource.'
      responses:
        201:
          description: 'Submitter resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
          links:
            GetSubmitterItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSubmitterItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /submitters/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Submitter-write'
        description: 'The new Submitter resource'
  '/submitters/{id}':
    get:
      tags:
        - Submitter
      operationId: getSubmitterItem
      summary: 'Retrieves a Submitter resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Submitter resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Submitter
      operationId: deleteSubmitterItem
      summary: 'Removes the Submitter resource.'
      responses:
        204:
          description: 'Submitter resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Submitter
      operationId: putSubmitterItem
      summary: 'Replaces the Submitter resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Submitter resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Submitter-write'
        description: 'The updated Submitter resource'
    patch:
      tags:
        - Submitter
      operationId: patchSubmitterItem
      summary: 'Updates the Submitter resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Submitter resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Submitter-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Submitter-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Submitter-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Submitter-write'
        description: 'The updated Submitter resource'
components:
  schemas:
    Organization-read:
      type: object
      description: 'An organization handling a request'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        rsin:
          description: 'The RSIN of a organization that is handling or supposed to handle this request'
          type: string
        status:
          type: string
        request:
          description: 'The request that this organsisation is handling'
          $ref: '#/components/schemas/Request-read'
      required:
        - rsin
        - status
    Organization-write:
      type: object
      description: 'An organization handling a request'
      required:
        - rsin
        - status
      properties:
        rsin:
          description: 'The RSIN of a organization that is handling or supposed to handle this request'
          type: string
        status:
          type: string
        request:
          description: 'The request that this organsisation is handling'
          $ref: '#/components/schemas/Request-write'
    Request-read:
      type: object
      description: 'A request (or verzoek in dutch) to an organizations (usually govenmental) to do ''something'' on behave of a citicen or other organization'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        reference:
          readOnly: true
          type: string
        status:
          type: string
        request_type:
          description: 'The request type agains wich this request should be validated'
          type: string
        target_organization:
          description: 'The RSIN of the organization that should handle this request'
          type: string
        submitter:
          description: 'The BSN (if person) or RSIN (if organization) that is the primary submiter this request'
          type: string
        submitters:
          description: 'The submitters of this request'
          type: array
          items:
            $ref: '#/components/schemas/Submitter-read'
        submitter_person:
          description: 'True if the submitters is a person'
          type: boolean
        properties:
          description: 'The actual properties of the request'
          type: array
          items:
            type: string
        created_at:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        submitted_at:
          readOnly: true
          description: 'The moment this request was submitted by the submitter'
          type: string
          format: date-time
        organizations:
          description: 'Organizations that are handling this request, the use of this under disucion since it would mean giving an organization all request info there where it might need less. Forcing AVG issues upon parties. The sollotion for this might be found in goal binding.'
          type: array
          items:
            $ref: '#/components/schemas/Organization-read'
        request_cases:
          description: 'Any or all cases currently atached to this request'
          type: array
          items:
            $ref: '#/components/schemas/RequestCase-read'
        parent:
          description: 'The request that this request was based on'
          $ref: '#/components/schemas/Request-read'
        children:
          description: 'The requests that are bassed on this request'
          type: array
          items:
            $ref: '#/components/schemas/Request-read'
      required:
        - request_type
    Request-write:
      type: object
      description: 'A request (or verzoek in dutch) to an organizations (usually govenmental) to do ''something'' on behave of a citicen or other organization'
      properties:
        status:
          type: string
        request_type:
          description: 'The request type agains wich this request should be validated'
          type: string
        target_organization:
          description: 'The RSIN of the organization that should handle this request'
          type: string
        submitter:
          description: 'The BSN (if person) or RSIN (if organization) that is the primary submiter this request'
          type: string
        submitters:
          description: 'The submitters of this request'
          type: array
          items:
            $ref: '#/components/schemas/Submitter-write'
        submitter_person:
          description: 'True if the submitters is a person'
          type: boolean
        properties:
          description: 'The actual properties of the request'
          type: array
          items:
            type: string
        organizations:
          description: 'Organizations that are handling this request, the use of this under disucion since it would mean giving an organization all request info there where it might need less. Forcing AVG issues upon parties. The sollotion for this might be found in goal binding.'
          type: array
          items:
            $ref: '#/components/schemas/Organization-write'
        request_cases:
          description: 'Any or all cases currently atached to this request'
          type: array
          items:
            $ref: '#/components/schemas/RequestCase-write'
        parent:
          description: 'The request that this request was based on'
          $ref: '#/components/schemas/Request-write'
        children:
          description: 'The requests that are bassed on this request'
          type: array
          items:
            $ref: '#/components/schemas/Request-write'
      required:
        - request_type
    RequestCase-read:
      type: object
      description: 'An case atached to a request'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        request_case:
          description: 'The OpenCase that is handling or supposed to handle this request'
          type: string
        request:
          description: 'The request that this case is handling'
          $ref: '#/components/schemas/Request-read'
        case_number:
          description: 'The number of an case'
          type: string
    RequestCase-write:
      type: object
      description: 'An case atached to a request'
      properties:
        request_case:
          description: 'The OpenCase that is handling or supposed to handle this request'
          type: string
        request:
          description: 'The request that this case is handling'
          $ref: '#/components/schemas/Request-write'
        case_number:
          description: 'The number of an case'
          type: string
    Submitter-read:
      type: object
      description: 'The submitters of a request'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        assent:
          description: 'The Assent that is ussued to check if this submitter given assent to this request'
          type: string
        person:
          description: 'The BSN of the person that submitted this request'
          type: string
        organization:
          description: 'The RSIN of the organization that submitted this request'
          type: string
        request:
          description: 'The request that this submitter subitted'
          $ref: '#/components/schemas/Request-read'
        role:
          type: string
    Submitter-write:
      type: object
      description: 'The submitters of a request'
      properties:
        assent:
          description: 'The Assent that is ussued to check if this submitter given assent to this request'
          type: string
        person:
          description: 'The BSN of the person that submitted this request'
          type: string
        organization:
          description: 'The RSIN of the organization that submitted this request'
          type: string
        request:
          description: 'The request that this submitter subitted'
          $ref: '#/components/schemas/Request-write'
        role:
          type: string
host: vrc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://verzoeken.zaakonline.nl/'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://verzoeken.zaakonline.nl/'
x-commonground:
  type: tool
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
